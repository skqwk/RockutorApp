apiVersion: v1
kind: ConfigMap
metadata:
  name: autz-redis-conf
  namespace: default
  labels:
    app: autz-redis
data:
  redis.conf: |
    bind 0.0.0.0
    requirepass autz
    appendonly yes
    appendfsync everysec
  users.acl: |
    user default on nopass ~* +@all
    user autz on >autz ~* +@all
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: autz-redis-pv-claim
  labels:
    app: autz-redis
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: autz-redis
spec:
  selector:
    matchLabels:
      app: autz-redis
  replicas: 1
  template:
    metadata:
      labels:
        app: autz-redis
    spec:
      volumes:
      - name: data
        persistentVolumeClaim:
          claimName: autz-redis-pv-claim
      - name: autz-redis-conf
        configMap:
          name: autz-redis-conf
      containers:
      - name: autz-redis
        image: redis:alpine3.16
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6379
        command:
          - redis-server
          - "/etc/redis/redis.conf"
          - --aclfile
          - "/etc/redis/users.acl"
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 10
          periodSeconds: 5
        livenessProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        startupProbe:
          exec:
            command:
              - redis-cli
              - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        volumeMounts:
        - name: data
          mountPath: /data
          readOnly: false
        - name: autz-redis-conf
          mountPath: /etc/redis/
---
apiVersion: v1
kind: Service
metadata:
  name: autz-redis
  labels:
    app: autz-redis
spec:
  ports:
    - name: autz-redis
      port: 6379
      targetPort: 6379
  type: NodePort
  selector:
    app: autz-redis
